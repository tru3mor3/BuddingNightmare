# map
import pygame as pg

_ = False
mini_map = [
    [1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 16, 1, 1, 3, 2, 1,],
    [2, _, _, _, _, 1, _, _, 1, _, 14, _, _, 1, _, _, _, _, _, _, 2,],
    [1, _, _, _, _, _, _, _, 1, _, 1, _, _, 2, _, _, _, _, _, _, 1,],
    [13, _, _, _, _, 1, _, _, 1, _, _, _, _, 1, _, _, _, _, _, _, 1,],
    [12, _, _, _, _, 1, 1, 1, 2, 1, 1, _, 1, 2, 1, 1, 1, _, 1, 1, 1,],
    [11, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, 1,],
    [1, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, 2,],
    [3, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, 3,],
    [1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 16, 1, 1, 1, 1, _, _, _, _, 1,],
    [4, 15, 4, 4, 4, 4, 5, 4, 5, 4, 4, 4, 4, 4, 4, 8, _, _, _, _, 16,],
    [4, _, _, _, _, _, _, 4, _, _, _, _, _, _, 4, 1, _, _, _, _, 1,],
    [4, _, _, _, _, _, _, 4, _, _, _, _, _, _, _, _, _, _, _, _, 1,],
    [6, _, _, _, _, _, _, _, _, _, _, _, _, _, 4, 1, _, _, _, _, 1,],
    [5, _, 7, 7, 7, 7, 4, 4, 4, 7, 7, 7, 7, 4, 4, 1, _, _, _, _, 1,],
    [4, _, _, _, _, _, _, _, _, _, _, _, _, _, 4, 1, _, _, _, _, 1,],
    [4, _, _, _, _, _, _, 4, _, _, _, _, _, _, _, _, _, _, _, _, 1,],
    [4, _, _, _, _, _, _, 4, _, _, _, _, _, _, 4, 1, _, _, _, _, 2,],
    [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 4, 2, _, _, _, _, 3,],
    [4, _, _, _, _, _, _, _, _, _, _, _, _, _, 4, 1, _, _, _, _, 1,],
    [6, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, 1,],
    [5, _, _, _, _, _, _, _, _, _, _, _, _, _, 4, 1, _, _, _, _, 1,],
    [4, _, _, _, _, _, _, _, _, _, _, _, _, _, 15, 1, _, _, _, _, 1,],
    [4, 4, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 5, 4, 2, _, _, _, _, 1,],
    [4, _, _, _, _, _, _, _, _, _, _, _, _, _, 4, 1, _, _, _, _, 1,],
    [4, _, _, _, _, _, _, _, _, _, _, _, _, _, 4, 1, _, _, _, _, 1,],
    [6, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, 1,],
    [5, _, _, _, _, _, _, _, _, _, _, _, _, _, 4, 1, _, _, _, _, 16,],
    [1, 5, 4, 15, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 1, _, _, _, _, 1,],
    [1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, _, _, _, _, 2,],
    [1, _, _, _, 1, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, 3,],
    [1, _, 1, _, 1, _, _, _, _, _, _, 2, _, _, _, _, _, _, _, _, 1,],
    [1, _, 1, 1, 1, _, _, 1, 1, 1, _, 1, 1, _, 1, 1, 1, 1, 1, 1, 1,],
    [1, _, _, _, _, _, _, _, _, 1, _, 1, 1, _, _, 1, _, _, _, _, 2,],
    [16, _, _, _, 1, _, _, 1, 1, 1, 1, 1, 1, _, _, _, _, _, _, _, 1,],
    [1, _, _, _, 1, _, _, _, _, _, _, 1, 1, _, _, 1, _, _, _, _, 14,],
    [1, _, _, _, 2, _, _, 1, 1, 1, 1, 1, 1, _, _, 1, _, _, _, _, 14,],
    [1, _, _, _, 1, _, _, 1, 9, 9, 1, 1, 1, _, _, 1, _, _, _, _, 14,],
    [1, _, _, _, 1, _, _, _, _, _, _, 10, 1, _, _, 2, _, _, _, _, 1,],
    [1, 13, 12, 11, 1, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, 1,],
]


class Map:
    def __init__(self, game):
        self.game = game
        self.mini_map = mini_map
        self.world_map = {}
        self.rows = len(self.mini_map)
        self.cols = len(self.mini_map[0])
        self.get_map()

    def get_map(self):
        for j, row in enumerate(self.mini_map):
            for i, value in enumerate(row):
                if value:
                    self.world_map[(i, j)] = value

    def draw(self):
        [pg.draw.rect(self.game.screen, 'darkgray', (pos[0] * 20, pos[1] * 20, 20, 20), 2)
         for pos in self.world_map]







        
